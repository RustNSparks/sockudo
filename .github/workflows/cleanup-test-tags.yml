name: Cleanup Test Docker Tags

on:
  workflow_dispatch:
    inputs:
      tags_to_delete:
        description: 'Comma-separated list of tags to delete (e.g., test,0.0.0-test,test-amd64)'
        required: false
        type: string
        default: ''
      delete_from_dockerhub:
        description: 'Delete from Docker Hub'
        required: false
        type: boolean
        default: true
      delete_from_ghcr:
        description: 'Delete from GitHub Container Registry'
        required: false
        type: boolean
        default: true

env:
  REGISTRY: ghcr.io

jobs:
  cleanup:
    name: Delete Test Tags
    runs-on: ubuntu-24.04
    
    steps:
      - name: Parse tags
        id: parse
        run: |
          IFS=',' read -ra TAGS <<< "${{ github.event.inputs.tags_to_delete }}"
          echo "Tags to delete: ${TAGS[@]}"

      - name: Delete from Docker Hub
        if: github.event.inputs.delete_from_dockerhub == 'true'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # Login to get token
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d '{"username": "'${DOCKERHUB_USERNAME}'", "password": "'${DOCKERHUB_TOKEN}'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to authenticate with Docker Hub"
            exit 1
          fi
          
          # Delete each tag
          IFS=',' read -ra TAGS <<< "${{ github.event.inputs.tags_to_delete }}"
          for TAG in "${TAGS[@]}"; do
            TAG=$(echo "$TAG" | xargs) # Trim whitespace
            echo "Deleting Docker Hub tag: sockudo/sockudo:${TAG}"
            
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE \
              -H "Authorization: Bearer ${TOKEN}" \
              "https://hub.docker.com/v2/repositories/sockudo/sockudo/tags/${TAG}/")
            
            if [ "$RESPONSE" = "204" ] || [ "$RESPONSE" = "404" ]; then
              echo "  ✓ Tag ${TAG} deleted or not found"
            else
              echo "  ✗ Failed to delete tag ${TAG} (HTTP ${RESPONSE})"
            fi
          done

      - name: Delete from GitHub Container Registry
        if: github.event.inputs.delete_from_ghcr == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get package versions for sockudo
          REPO_OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          
          IFS=',' read -ra TAGS <<< "${{ github.event.inputs.tags_to_delete }}"
          for TAG in "${TAGS[@]}"; do
            TAG=$(echo "$TAG" | xargs) # Trim whitespace
            echo "Deleting GHCR tag: ghcr.io/${REPO_OWNER}/${REPO_NAME}:${TAG}"
            
            # Get the package version ID for this tag
            VERSION_ID=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/user/packages/container/${REPO_NAME}/versions" \
              --jq ".[] | select(.metadata.container.tags[] | contains(\"${TAG}\")) | .id" \
              2>/dev/null | head -n1)
            
            if [ -n "$VERSION_ID" ]; then
              # Delete the version
              gh api \
                --method DELETE \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "/user/packages/container/${REPO_NAME}/versions/${VERSION_ID}" \
                2>/dev/null && echo "  ✓ Tag ${TAG} deleted" || echo "  ✗ Failed to delete tag ${TAG}"
            else
              echo "  ✓ Tag ${TAG} not found or already deleted"
            fi
          done

      - name: Summary
        run: |
          echo "## Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Tags processed:" >> $GITHUB_STEP_SUMMARY
          IFS=',' read -ra TAGS <<< "${{ github.event.inputs.tags_to_delete }}"
          for TAG in "${TAGS[@]}"; do
            echo "- ${TAG}" >> $GITHUB_STEP_SUMMARY
          done
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event.inputs.delete_from_dockerhub }}" = "true" ]; then
            echo "✅ Deleted from Docker Hub" >> $GITHUB_STEP_SUMMARY
          fi
          if [ "${{ github.event.inputs.delete_from_ghcr }}" = "true" ]; then
            echo "✅ Deleted from GitHub Container Registry" >> $GITHUB_STEP_SUMMARY
          fi
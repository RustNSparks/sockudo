user nginx;
worker_processes auto;
error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    sendfile on;
    keepalive_timeout 65;

    # Unix socket upstream for Sockudo
    upstream sockudo_unix {
        server unix:/var/run/sockudo/sockudo.sock;
    }

    # HTTP server
    server {
        listen 80;
        server_name localhost;

        # Serve the client HTML
        location /client {
            alias /usr/share/nginx/html/;
            try_files /index.html =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Nginx is healthy\n";
            add_header Content-Type text/plain;
        }

        # Sockudo proxy for WebSocket connections
        location /app {
            proxy_pass http://sockudo_unix;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # WebSocket specific settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Sockudo REST API endpoints
        location / {
            proxy_pass http://sockudo_unix;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Standard HTTP proxy settings
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 60s;
        }
    }

    # HTTPS server (optional, with self-signed cert)
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Serve the client HTML
        location /client {
            alias /usr/share/nginx/html/;
            try_files /index.html =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Nginx SSL is healthy\n";
            add_header Content-Type text/plain;
        }

        # Sockudo proxy for WebSocket connections
        location /app {
            proxy_pass http://sockudo_unix;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # WebSocket specific settings
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Sockudo REST API endpoints
        location / {
            proxy_pass http://sockudo_unix;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Standard HTTP proxy settings
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
            proxy_connect_timeout 60s;
        }
    }
}